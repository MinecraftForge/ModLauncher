name: Test JVMs and publish Jmh results

on:
  workflow_dispatch:

jobs:
  testjdks:
    if: ${{ env.ACT }} # Only run when testing locally
    name: Test JDK ${{ matrix.jdk }} version ${{ matrix.jvm_version }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        jvm_version: [ 16, 17, 18, 19, 20, 21 ]
        jdk: [ Adoptium, Amazon, Azul, BellSoft, Graal_VM, IBM, Oracle, Microsoft, SAP ]
        exclude: # Cases where the Distro doesn't have a version
          - jdk: Graal_VM
            jvm_version: 18
          - jdk: IBM
            jvm_version: 21
          - jdk: SAP
            jvm_version: 21
          - jdk: Microsoft
            jvm_version: 18
          - jdk: Microsoft
            jvm_version: 19
          - jdk: Microsoft
            jvm_version: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
        with:
          fetch-depth: 0
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-disabled: true
          generate-job-summary: false
          
      - name: Make gradlew executable
        run: chmod +x ./gradlew
        
      - name: Run Jmh
        run: ./gradlew --console=plain --continue :ml-jmh:jmh -PjavaVendor=${{ matrix.jdk }} -PjavaVersion=${{ matrix.jvm_version }}
        
      - name: Upload JMH Results
        uses: actions/upload-artifact@v3
        with:
          name: jmh-${{ matrix.jdk }}-${{ matrix.jvm_version }}
          path: build/jmh_results.json
      
      #  It's faster to just run the tests locally.
      #- name: Run Tests
      #  run: ./gradlew --console=plain --continue :ml-test:test -PjavaVendor=${{ matrix.jdk }} -PjavaVersion=${{ matrix.jvm_version }}
      #    
      #- name: Upload Test Reports
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: test-reports-${{ matrix.jdk }}-${{ matrix.jvm_version }}
      #    path: build/reports/
      #    
      #- name: Upload Test Results
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: test-results-${{ matrix.jdk }}-${{ matrix.jvm_version }}
      #    path: build/test-results/

  upload_results:
    name: Upload Jmh results
    needs: [testjdks]
    runs-on: ubuntu-latest
    if: ${{ env.ACT }} # Only run when testing locally
    steps:
      - name: Setup Groovy
        uses: wtfjoke/setup-groovy@v1
        with:
          groovy-version: '4.x'
          
      - name: Checkout repository
        uses: actions/checkout@main
        
      - name: Downloads results
        uses: actions/download-artifact@v4
        id: download
        with:
          path: build/test_artifacts
          
      - name: Collect JMH results
        run: groovy .github/workflows/aggregate-jmh-results.groovy
        
      #- name: Collect JUnit results
      #  run: groovy .github/workflows/aggregate-junit-tests.groovy
        
      - name: Upload Final Results
        uses: actions/upload-artifact@v4
        with:
          name: aggregate-results
          path: jmh_results.md
          #path: |
          #  jmh_results.md
          #  test_results.html
         